/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 09 04:29:36 GMT 2018
 */

package org.jabref.model.entry;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jabref.model.entry.Author;
import org.jabref.model.entry.AuthorList;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class AuthorList_ESTest extends AuthorList_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      String string0 = AuthorList.fixAuthorLastNameFirstCommas("", false, true);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      String string0 = AuthorList.fixAuthorFirstNameFirstCommas("", false, true);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      String string0 = AuthorList.fixAuthorNatbib(" and ");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      LinkedList<Author> linkedList0 = new LinkedList<Author>();
      AuthorList authorList0 = new AuthorList(linkedList0);
      linkedList0.add((Author) null);
      int int0 = authorList0.getNumberOfAuthors();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      // Undeclared exception!
      try { 
        AuthorList.parse((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      AuthorList authorList0 = new AuthorList((Author) null);
      // Undeclared exception!
      try { 
        authorList0.getForAlphabetization();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.stream.ReferencePipeline$3$1", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      AuthorList authorList0 = new AuthorList();
      // Undeclared exception!
      try { 
        authorList0.getAuthor((-4093));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      AuthorList authorList0 = new AuthorList((Author) null);
      // Undeclared exception!
      try { 
        authorList0.getAsLastFirstNamesWithAnd(true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jabref.model.entry.AuthorList", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      AuthorList authorList0 = new AuthorList((Author) null);
      // Undeclared exception!
      try { 
        authorList0.getAsFirstLastNamesWithAnd();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jabref.model.entry.AuthorList", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      // Undeclared exception!
      try { 
        AuthorList.fixAuthorNatbib((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      // Undeclared exception!
      try { 
        AuthorList.fixAuthorNatbib("WyF`j.vO=F8;zK~^g#");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/commons/lang3/StringUtils
         //
         verifyException("org.jabref.model.strings.StringUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      // Undeclared exception!
      try { 
        AuthorList.fixAuthorLastNameOnlyCommas((String) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      // Undeclared exception!
      try { 
        AuthorList.fixAuthorLastNameOnlyCommas("pRL", false);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/commons/lang3/StringUtils
         //
         verifyException("org.jabref.model.strings.StringUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      // Undeclared exception!
      try { 
        AuthorList.fixAuthorLastNameFirstCommas((String) null, true, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      // Undeclared exception!
      try { 
        AuthorList.fixAuthorLastNameFirstCommas(", jrPart='", false, false);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/commons/lang3/StringUtils
         //
         verifyException("org.jabref.model.strings.StringUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      // Undeclared exception!
      try { 
        AuthorList.fixAuthorLastNameFirst((String) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      // Undeclared exception!
      try { 
        AuthorList.fixAuthorLastNameFirst((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      // Undeclared exception!
      try { 
        AuthorList.fixAuthorLastNameFirst("YNL");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/commons/lang3/StringUtils
         //
         verifyException("org.jabref.model.strings.StringUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      // Undeclared exception!
      try { 
        AuthorList.fixAuthorForAlphabetization((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      // Undeclared exception!
      try { 
        AuthorList.fixAuthorForAlphabetization("5cUdewIj)T7x");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/commons/lang3/StringUtils
         //
         verifyException("org.jabref.model.strings.StringUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      // Undeclared exception!
      try { 
        AuthorList.fixAuthorFirstNameFirstCommas((String) null, true, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      // Undeclared exception!
      try { 
        AuthorList.fixAuthorFirstNameFirstCommas("uak(b", true, true);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/commons/lang3/StringUtils
         //
         verifyException("org.jabref.model.strings.StringUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      // Undeclared exception!
      try { 
        AuthorList.fixAuthorFirstNameFirst((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      // Undeclared exception!
      try { 
        AuthorList.fixAuthorFirstNameFirst("zy.[1'}Ir7-D~l");
        throw new NoClassDefFoundError();
        //fail("Expecting exception: NoClassDefFoundError");
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/commons/lang3/StringUtils
         //
         verifyException("org.jabref.model.entry.AuthorList_ESTest.test23", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      AuthorList authorList0 = null;
      try {
        authorList0 = new AuthorList((List<Author>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      AuthorList authorList0 = AuthorList.parse("");
      String string0 = authorList0.getForAlphabetization();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      AuthorList authorList0 = AuthorList.parse("");
      String string0 = authorList0.getAsFirstLastNamesWithAnd();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      AuthorList authorList0 = new AuthorList();
      String string0 = authorList0.getAsLastFirstNamesWithAnd(false);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      AuthorList authorList0 = AuthorList.parse("");
      String string0 = authorList0.getAsLastFirstNames(false, false);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      AuthorList authorList0 = AuthorList.parse("");
      String string0 = authorList0.getAsLastNames(true);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      AuthorList authorList0 = new AuthorList();
      String string0 = authorList0.getAsLastNames(false);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      AuthorList authorList0 = AuthorList.parse("");
      String string0 = authorList0.getAsNatbib();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      AuthorList authorList0 = AuthorList.parse("");
      boolean boolean0 = authorList0.isEmpty();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      AuthorList authorList0 = AuthorList.parse(";");
      assertEquals(0, authorList0.getNumberOfAuthors());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      AuthorList authorList0 = new AuthorList();
      List<Author> list0 = authorList0.getAuthors();
      AuthorList authorList1 = new AuthorList(list0);
      boolean boolean0 = authorList0.equals(authorList1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      AuthorList authorList0 = new AuthorList();
      String string0 = authorList0.getForAlphabetization();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      AuthorList authorList0 = new AuthorList();
      String string0 = authorList0.getAsFirstLastNamesWithAnd();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      AuthorList authorList0 = AuthorList.parse("");
      boolean boolean0 = authorList0.equals("");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      AuthorList authorList0 = new AuthorList((Author) null);
      // Undeclared exception!
      try { 
        authorList0.getAsFirstLastNames(false, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jabref.model.entry.AuthorList", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      AuthorList authorList0 = new AuthorList();
      String string0 = authorList0.getAsFirstLastNames(true, true);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      AuthorList authorList0 = AuthorList.parse("");
      String string0 = authorList0.getAsFirstLastNames(true, true);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      AuthorList authorList0 = new AuthorList((Author) null);
      // Undeclared exception!
      try { 
        authorList0.getAsLastFirstFirstLastNamesWithAnd(false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jabref.model.entry.AuthorList", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      AuthorList authorList0 = new AuthorList();
      String string0 = authorList0.getAsLastFirstFirstLastNamesWithAnd(true);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      AuthorList authorList0 = AuthorList.parse("");
      String string0 = authorList0.getAsLastFirstFirstLastNamesWithAnd(true);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      AuthorList authorList0 = new AuthorList();
      String string0 = authorList0.getAsLastFirstNames(true, true);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      AuthorList authorList0 = new AuthorList((Author) null);
      // Undeclared exception!
      try { 
        authorList0.getAsLastNames(true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jabref.model.entry.AuthorList", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      AuthorList authorList0 = new AuthorList((Author) null);
      // Undeclared exception!
      try { 
        authorList0.getAsNatbib();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jabref.model.entry.AuthorList", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      AuthorList authorList0 = new AuthorList();
      String string0 = authorList0.getAsNatbib();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      LinkedList<Author> linkedList0 = new LinkedList<Author>();
      AuthorList authorList0 = new AuthorList(linkedList0);
      assertTrue(authorList0.isEmpty());
      
      linkedList0.add((Author) null);
      boolean boolean0 = authorList0.isEmpty();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      // Undeclared exception!
      try { 
        AuthorList.parse("Author{");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/commons/lang3/StringUtils
         //
         verifyException("org.jabref.model.strings.StringUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      AuthorList authorList0 = AuthorList.parse(" AND ");
      String string0 = authorList0.getAsLastFirstNamesWithAnd(true);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      // Undeclared exception!
      try { 
        AuthorList.fixAuthorLastNameFirst("Z,;,87t4|kSQ", false);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/commons/lang3/StringUtils
         //
         verifyException("org.jabref.model.strings.StringUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      String string0 = AuthorList.fixAuthorLastNameFirst("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      AuthorList authorList0 = new AuthorList();
      String string0 = authorList0.toString();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      String string0 = AuthorList.fixAuthorFirstNameFirst("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      String string0 = AuthorList.fixAuthorLastNameOnlyCommas(", ", false);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      AuthorList authorList0 = new AuthorList();
      int int0 = authorList0.getNumberOfAuthors();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      String string0 = AuthorList.fixAuthorLastNameFirst("", true);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      AuthorList authorList0 = new AuthorList();
      // Undeclared exception!
      try { 
        authorList0.getAuthor(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      String string0 = AuthorList.fixAuthorForAlphabetization("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      AuthorList authorList0 = new AuthorList();
      // Undeclared exception!
      try { 
        authorList0.addAuthor("", "", "", "", "vn");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/commons/lang3/StringUtils
         //
         verifyException("org.jabref.model.strings.StringUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      AuthorList authorList0 = new AuthorList((Author) null);
      authorList0.hashCode();
  }
}
